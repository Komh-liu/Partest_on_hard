{
    "hardware": {
        "cpus": [
            {
                "cores": 20,
                "threads": 16,
                "frequency": "3.6 GHz",
                "available": "True"
            }
        ],
        "gpu": {
            "cuda_cores": 10496,
            "memory": {
                "size": "24 GB",
                "type": "GDDR6X"
            },
            "available": "True"
        }
    },
    "resources": {
        "cpu_memory": "20 GB",
        "gpu_memory": "24 GB"
    },
    "tasks": [
        {
            "type": "graph_bfs",
            "function_signatures": {
                "CUDA": "void bfs(const CUDAGraph& graph, int start, std::vector<int> & result); // start is the starting node. Save the results in BFS order to the result and print the final size of the result to the terminal",
                "other": "void bfs(const Graph& graph, int start, std::vector<int> & result); //start is the starting node. Save the path length of each node into the corresponding item in result.If paralelled,using only paralelled data structure.Utilize the hardware resoureces"
            },
            "contexts": {
                "CUDA": "struct CUDAGraph {\n    int numVertices;\n    int numEdges;\n    int* offset;    // Vertex adjacency list offset array\n    int* edges;     // Adjacent vertex data array\n};// The structure is defined in other files. Do not output it in the code",
                "other": "struct Graph {\n    int numVertices;\n    int numEdges;\n    int* offset;    // Vertex adjacency list offset array\n    int* edges;     // Adjacent vertex data array\n};// The structure is defined in other files. Do not output it in the code"
            }
        }
    ]
}