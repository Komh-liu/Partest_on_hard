{
    "hardware": {
        "cpu": {
            "cores": 8,
            "threads": 16,
            "frequency": "3.6 GHz",
            "available": "True"
        },
        "gpu": {
            "cuda_cores": 3584,
            "memory": {
                "size": "12 GB",
                "type": "GDDR6"
            },
            "available": "True"
        }
    },
    "resources": {
        "cpu_memory": "16 GB",
        "gpu_memory": "12 GB"
    },
    "tasks": [
        {
            "type": "array_sum",
            "function_signatures": {
                "CUDA": "int array_sum(const Array& arr); // 计算大数组的和",
                "other": "int array_sum(const Array& arr); // 计算大数组的和"
            },
            "contexts": {
                "CUDA": "#include <vector>\n\n// 定义数组类型\nusing Array = std::vector<int>;",
                "other": "#include <vector>\n\n// 定义数组类型\nusing Array = std::vector<int>;"
            }
        },
        {
            "type": "matrix_multiply",
            "function_signatures": {
                "CUDA": "void matrix_multiply(const Matrix& A, int N, int M, Matrix& result);//N为行数 M为列数,计算矩阵A与其转置的乘法",
                "other": "void matrix_multiply(const Matrix& A, Matrix& result);//计算矩阵A与其转置的乘法"
            },
            "contexts": {
                "CUDA": "// CUDA 适合使用一维数组\nusing Matrix = std::vector<int>;",
                "other": "// 通用二维向量矩阵表示\nusing Matrix = std::vector<std::vector<int>>;"
            }
        }
    ]
}