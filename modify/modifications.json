{
    "tasks": [
      {
        "task_type": "array_sum",  
        "requirements": "None",
        "errors": "None"
      },
      {
        "task_type": "matrix_multiply",
        "requirements": "None",
        "errors": "None"
      },
      {
        "task_type": "graph_bfs",
        "requirements": "减少临界区的使用：在原始代码中，#pragma omp critical 会导致线程之间竞争，严重影响性能。可以通过使用线程私有的队列来避免竞争。分批处理队列：将队列中的元素分批分配给线程，减少线程之间对队列的访问冲突。使用线程私有数据结构：为每个线程分配独立的队列和访问列表，减少全局数据的访问冲突。减少同步操作：尽量减少全局同步操作，例如使用 #pragma omp barrier 的次数。",
        "errors": "None"
      }
    ]
  }